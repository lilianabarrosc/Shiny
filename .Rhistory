#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
header <- dashboardHeader()
header$children[[2]]$children <- tags$img(src='gato.jpg',height='30',width='70')
sidebar <- dashboardSidebar(disable = "true",sidebarMenu(
menuItem("Dashboard", tabName = "dsh", icon = icon("list-alt"))))
page <- fluidPage(
fluidRow(
#BreadCrumds
column(12,
#archivo que contiene el html de la página home
includeHTML("breadcrumbs.html"),
tabBox(
title = "First tabBox", background = "black",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
)
#     <ul class="breadcrumbs">
#       <li><a href="#">Home</a></li>
#       <li><a href="#">Features</a></li>
#       <li class="unavailable"><a href="#">Gene Splicing</a></li>
#       <li class="current"><a href="#">Cloning</a></li>
#       </ul>
)
)
body <- dashboardBody(page)
ui <- dashboardPage(header, sidebar, body)
# #cambio de personalización de colores
# ui <- dashboardPage(
#   dashboardHeader(
#     title = "Example of a long title that needs more space",
#     titleWidth = 450
#   ),
#   dashboardSidebar( sidebarMenu(
#     menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
#     menuItem("Widgets", icon = icon("th"), tabName = "widgets",
#              badgeLabel = "new", badgeColor = "green")
#   )),
#   dashboardBody(
#     # Also add some custom CSS to make the title background area the same
#     # color as the rest of the header.
#     tags$head(tags$style(HTML('
#                               /* logo */
#                               .skin-blue .main-header .logo {
#                               background-color: #f4b943;
#                               }
#
#                               /* logo when hovered */
#                               .skin-blue .main-header .logo:hover {
#                               background-color: #f4b943;
#                               }
#
#                               /* navbar (rest of the header) */
#                               .skin-blue .main-header .navbar {
#                               background-color: #f4b943;
#                               }
#
#                               /* main sidebar */
#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
header <- dashboardHeader()
header$children[[2]]$children <- tags$img(src='gato.jpg',height='30',width='70')
sidebar <- dashboardSidebar(disable = "true",sidebarMenu(
menuItem("Dashboard", tabName = "dsh", icon = icon("list-alt"))))
page <- fluidPage(
fluidRow(
#BreadCrumds
column(12,
#archivo que contiene el html de la página home
includeHTML("breadcrumbs.html"),
tabBox(
title = "First tabBox", status = "warning",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
)
#     <ul class="breadcrumbs">
#       <li><a href="#">Home</a></li>
#       <li><a href="#">Features</a></li>
#       <li class="unavailable"><a href="#">Gene Splicing</a></li>
#       <li class="current"><a href="#">Cloning</a></li>
#       </ul>
)
)
body <- dashboardBody(page)
ui <- dashboardPage(header, sidebar, body)
# #cambio de personalización de colores
# ui <- dashboardPage(
#   dashboardHeader(
#     title = "Example of a long title that needs more space",
#     titleWidth = 450
#   ),
#   dashboardSidebar( sidebarMenu(
#     menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
#     menuItem("Widgets", icon = icon("th"), tabName = "widgets",
#              badgeLabel = "new", badgeColor = "green")
#   )),
#   dashboardBody(
#     # Also add some custom CSS to make the title background area the same
#     # color as the rest of the header.
#     tags$head(tags$style(HTML('
#                               /* logo */
#                               .skin-blue .main-header .logo {
#                               background-color: #f4b943;
#                               }
#
#                               /* logo when hovered */
#                               .skin-blue .main-header .logo:hover {
#                               background-color: #f4b943;
#                               }
#
#                               /* navbar (rest of the header) */
#                               .skin-blue .main-header .navbar {
#                               background-color: #f4b943;
#                               }
#
#                               /* main sidebar */
#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
header <- dashboardHeader()
header$children[[2]]$children <- tags$img(src='gato.jpg',height='30',width='70')
sidebar <- dashboardSidebar(disable = "true",sidebarMenu(
menuItem("Dashboard", tabName = "dsh", icon = icon("list-alt"))))
page <- fluidPage(
fluidRow(
#BreadCrumds
column(12,
#archivo que contiene el html de la página home
includeHTML("breadcrumbs.html"),
tabBox(
title = "First tabBox",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
)
#     <ul class="breadcrumbs">
#       <li><a href="#">Home</a></li>
#       <li><a href="#">Features</a></li>
#       <li class="unavailable"><a href="#">Gene Splicing</a></li>
#       <li class="current"><a href="#">Cloning</a></li>
#       </ul>
)
)
body <- dashboardBody(page,
tags$head(tags$style(HTML('
/* logo */
.skin-blue .main-header .logo {
background-color: #f4b943;
})')
)
)
)
ui <- dashboardPage(header, sidebar, body)
# #cambio de personalización de colores
# ui <- dashboardPage(
#   dashboardHeader(
#     title = "Example of a long title that needs more space",
#     titleWidth = 450
#   ),
#   dashboardSidebar( sidebarMenu(
#     menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
#     menuItem("Widgets", icon = icon("th"), tabName = "widgets",
#              badgeLabel = "new", badgeColor = "green")
#   )),
#   dashboardBody(
#     # Also add some custom CSS to make the title background area the same
#     # color as the rest of the header.
#     tags$head(tags$style(HTML('
#                               /* logo */
#                               .skin-blue .main-header .logo {
#                               background-color: #f4b943;
#                               }
#
#                               /* logo when hovered */
#                               .skin-blue .main-header .logo:hover {
#                               background-color: #f4b943;
#                               }
#
#                               /* navbar (rest of the header) */
#                               .skin-blue .main-header .navbar {
#                               background-color: #f4b943;
#                               }
#
#                               /* main sidebar */
#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
header <- dashboardHeader()
header$children[[2]]$children <- tags$img(src='gato.jpg',height='30',width='70')
sidebar <- dashboardSidebar(disable = "true",sidebarMenu(
menuItem("Dashboard", tabName = "dsh", icon = icon("list-alt"))))
page <- fluidPage(
fluidRow(
#BreadCrumds
column(12,
#archivo que contiene el html de la página home
includeHTML("breadcrumbs.html"),
tabBox(
title = "First tabBox",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
)
#     <ul class="breadcrumbs">
#       <li><a href="#">Home</a></li>
#       <li><a href="#">Features</a></li>
#       <li class="unavailable"><a href="#">Gene Splicing</a></li>
#       <li class="current"><a href="#">Cloning</a></li>
#       </ul>
)
)
body <- dashboardBody(page,
tags$head(tags$style(HTML('
/* logo */
.nav-tabs-custom>.nav-tabs>li.active {
border-top-color: #f39c12;
})')
)
)
)
ui <- dashboardPage(header, sidebar, body)
# #cambio de personalización de colores
# ui <- dashboardPage(
#   dashboardHeader(
#     title = "Example of a long title that needs more space",
#     titleWidth = 450
#   ),
#   dashboardSidebar( sidebarMenu(
#     menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
#     menuItem("Widgets", icon = icon("th"), tabName = "widgets",
#              badgeLabel = "new", badgeColor = "green")
#   )),
#   dashboardBody(
#     # Also add some custom CSS to make the title background area the same
#     # color as the rest of the header.
#     tags$head(tags$style(HTML('
#                               /* logo */
#                               .skin-blue .main-header .logo {
#                               background-color: #f4b943;
#                               }
#
#                               /* logo when hovered */
#                               .skin-blue .main-header .logo:hover {
#                               background-color: #f4b943;
#                               }
#
#                               /* navbar (rest of the header) */
#                               .skin-blue .main-header .navbar {
#                               background-color: #f4b943;
#                               }
#
#                               /* main sidebar */
#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
library('shiny')
library('shinydashboard')
header <- dashboardHeader()
header$children[[2]]$children <- tags$img(src='gato.jpg',height='30',width='70')
sidebar <- dashboardSidebar(disable = "true",sidebarMenu(
menuItem("Dashboard", tabName = "dsh", icon = icon("list-alt"))))
page <- fluidPage(
fluidRow(
#BreadCrumds
column(12,
#archivo que contiene el html de la página home
HTML('
<ul class="breadcrumb">
<li>Analysis</li>
<li>Visualization</li>
</ul>'),
# includeHTML("breadcrumbs.html"),
tabBox(
title = "First tabBox",
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "250px",
tabPanel("Tab1", "First tab content"),
tabPanel("Tab2", "Tab content 2")
)
)
#     <ul class="breadcrumbs">
#       <li><a href="#">Home</a></li>
#       <li><a href="#">Features</a></li>
#       <li class="unavailable"><a href="#">Gene Splicing</a></li>
#       <li class="current"><a href="#">Cloning</a></li>
#       </ul>
)
)
body <- dashboardBody(page,
tags$head(tags$style(HTML('
/* logo */
.nav-tabs-custom>.nav-tabs>li.active {
border-top-color: #f39c12;
})')
)
)
)
ui <- dashboardPage(header, sidebar, body)
# #cambio de personalización de colores
# ui <- dashboardPage(
#   dashboardHeader(
#     title = "Example of a long title that needs more space",
#     titleWidth = 450
#   ),
#   dashboardSidebar( sidebarMenu(
#     menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
#     menuItem("Widgets", icon = icon("th"), tabName = "widgets",
#              badgeLabel = "new", badgeColor = "green")
#   )),
#   dashboardBody(
#     # Also add some custom CSS to make the title background area the same
#     # color as the rest of the header.
#     tags$head(tags$style(HTML('
#                               /* logo */
#                               .skin-blue .main-header .logo {
#                               background-color: #f4b943;
#                               }
#
#                               /* logo when hovered */
#                               .skin-blue .main-header .logo:hover {
#                               background-color: #f4b943;
#                               }
#
#                               /* navbar (rest of the header) */
#                               .skin-blue .main-header .navbar {
#                               background-color: #f4b943;
#                               }
#
#                               /* main sidebar */
#                               .skin-blue .main-sidebar {
#                               background-color: #f4b943;
#                               }
#
#                               /* active selected tab in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
#                               background-color: #ff0000;
#                               }
#
#                               /* other links in the sidebarmenu */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a{
#                               background-color: #00ff00;
#                               color: #000000;
#                               }
#
#                               /* other links in the sidebarmenu when hovered */
#                               .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#                               background-color: #ff69b4;
#                               }
#                               ')))
#     )
#
#
#     )
server <- function(input, output, session) {
}
shinyApp(ui, server)
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
shiny::runApp('GitHub/Shiny')
setwd("~/GitHub/Shiny")
shiny::runApp()
shiny::runApp()
